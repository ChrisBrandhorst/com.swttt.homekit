const { Characteristic } = require('hap-nodejs');

module.exports = {
  onoff:                     { class : Characteristic.On, get() {}, set(v) {} },
  dim:                       { class : Characteristic.Brightness, get() {}, set(v) {} },
  light_hue:                 { class : Characteristic.Hue, get() {}, set(v) {} },
  light_saturation:          { class : Characteristic.Saturation, get() {}, set(v) {} },
  light_temperature:         { class : Characteristic.ColorTemperature, get() {}, set(v) {} },
  //light_mode:                { class : Characteristic., get() {}, set(v) {} },
  //vacuumcleaner_state:       { class : Characteristic., get() {}, set(v) {} },
  thermostat_mode:           { class : Characteristic.CurrentHeatingCoolingState, get() {}, set(v) {} },
  target_temperature:        { class : Characteristic.TargetTemperature, get() {}, set(v) {} },
  measure_temperature:       { class : Characteristic.CurrentTemperature, get() {}, set(v) {} },
  measure_co:                { class : Characteristic.CarbonMonoxideLevel, get() {}, set(v) {} },
  measure_co2:               { class : Characteristic.CarbonDioxideLevel, get() {}, set(v) {} },
  measure_pm25:              { class : Characteristic.AirParticulateSize, get() {}, set(v) {} },
  measure_humidity:          { class : Characteristic.CurrentRelativeHumidity, get() {}, set(v) {} },
  //measure_pressure:          { class : Characteristic., get() {}, set(v) {} },
  //measure_noise:             { class : Characteristic., get() {}, set(v) {} },
  // measure_rain:              { class : Characteristic., get() {}, set(v) {} },
  //measure_wind_strength:     { class : Characteristic., get() {}, set(v) {} },
  //measure_wind_angle:        { class : Characteristic., get() {}, set(v) {} },
  //measure_gust_strength:     { class : Characteristic., get() {}, set(v) {} },
  //measure_gust_angle:        { class : Characteristic., get() {}, set(v) {} },
  measure_battery:           { class : Characteristic.BatteryLevel, get() {}, set: null },
  //measure_power:             { class : Characteristic., get() {}, set(v) {} },
  //measure_voltage:           { class : Characteristic., get() {}, set(v) {} },
  //measure_current:           { class : Characteristic., get() {}, set(v) {} },
  // measure_luminance:         { class : Characteristic., get() {}, set(v) {} },
  //measure_ultraviolet:       { class : Characteristic., get() {}, set(v) {} },
  //measure_water:             { class : Characteristic., get() {}, set(v) {} },
  //alarm_generic:             { class : Characteristic., get() {}, set(v) {} },
  alarm_motion:              { class : Characteristic.MotionDetected, get() {}, set(v) {} },
  alarm_contact:             { class : Characteristic.StatusTampered, get() {}, set(v) {} },
  alarm_co:                  { class : Characteristic.CarbonMonoxideDetected, get() {}, set(v) {} },
  alarm_co2:                 { class : Characteristic.CarbonDioxideDetected, get() {}, set(v) {} },
  //alarm_pm25:                { class : Characteristic., get() {}, set(v) {} },
  alarm_tamper:              { class : Characteristic.StatusTampered, get() {}, set(v) {} },
  alarm_smoke:               { class : Characteristic.SmokeDetected, get() {}, set(v) {} },
  //alarm_fire:                { class : Characteristic., get() {}, set(v) {} },
  //alarm_heat:                { class : Characteristic., get() {}, set(v) {} },
  //alarm_water:               { class : Characteristic., get() {}, set(v) {} },
  alarm_battery:             { class : Characteristic.StatusLowBattery, get() {}, set(v) {} },
  //alarm_night:               { class : Characteristic., get() {}, set(v) {} },
  //meter_power:               { class : Characteristic., get() {}, set(v) {} },
  //meter_water:               { class : Characteristic., get() {}, set(v) {} },
  //meter_gas:                 { class : Characteristic., get() {}, set(v) {} },
  //meter_rain:                { class : Characteristic., get() {}, set(v) {} },
  homealarm_state:           { class : Characteristic.SecuritySystemCurrentState, get() {}, set(v) {} },
  volume_set:                { class : Characteristic.Volume, get() {}, set(v) {} },
  //volume_up:                 { class : Characteristic., get() {}, set(v) {} },
  //volume_down:               { class : Characteristic., get() {}, set(v) {} },
  volume_mute:               { class : Characteristic.Volume, get() {}, set(v = 0) {} },
  //channel_up:                { class : Characteristic., get() {}, set(v) {} },
  //channel_down:              { class : Characteristic., get() {}, set(v) {} },
  locked:                    { class : Characteristic.LockCurrentState, get() {/* == 1*/ }, set(v) {} },
  lock_mode:                 { class : Characteristic.LockCurrentState, get() {}, set(v) {} },
  windowcoverings_state:     { class : Characteristic.PositionState, get() {}, set(v) {} },
  windowcoverings_tilt_up:   { class : Characteristic.CurrentHorizontalTiltAngle, get() {}, set(v) {} },
  windowcoverings_tilt_down: { class : Characteristic.CurrentHorizontalTiltAngle, get() {}, set(v) {} },
  windowcoverings_tilt_set:  { class : Characteristic.TargetHorizontalTiltAngle, get() {}, set(v) {} },
  //windowcoverings_closed:    { class : Characteristic., get() {}, set(v) {} },
  windowcoverings_set:       { class : Characteristic.TargetVerticalTiltAngle, get() {}, set(v) {} },
  button:                    { class : Characteristic.ProgrammableSwitchEvent, get() {}, set(v) {} },
  // speaker_playing:           { class : Characteristic., get() {}, set(v) {} },
  // speaker_next:              { class : Characteristic., get() {}, set(v) {} },
  // speaker_prev:              { class : Characteristic., get() {}, set(v) {} },
  // speaker_shuffle:           { class : Characteristic., get() {}, set(v) {} },
  // speaker_repeat:            { class : Characteristic., get() {}, set(v) {} },
  // speaker_artist:            { class : Characteristic., get() {}, set(v) {} },
  // speaker_album:             { class : Characteristic., get() {}, set(v) {} },
  // speaker_track:             { class : Characteristic., get() {}, set(v) {} },
  // speaker_duration:          { class : Characteristic., get() {}, set(v) {} },
  // speaker_position:          { class : Characteristic., get() {}, set(v) {} },
};
